apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "name" . }}
  labels:
    app: {{ .Chart.Name }}-{{ .Values.image.tag }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ template "name" . }}
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kpn-catalog-services
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      release: {{ template "name" . }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-{{ .Values.image.tag }}
        release: {{ template "name" . }}
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "3000"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
        sidecar.istio.io/proxyCPU: 20m
        sidecar.istio.io/proxyMemory: 50M
        sidecar.istio.io/proxyMemoryLimit: 650Mi
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      {{- if .Values.image.pullSecret.enabled }}
      imagePullSecrets:
      - name: gcr-registry-auth
      {{- end }}
      {{- if .Values.gcp.enabled }}
      volumes:
          - name: gcp
            secret:
              secretName: {{ template "name" . }}-gcp-auth
      {{- end }}
      containers:
          - name: {{ .Chart.Name }}
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.securityContext.enabled }}  
            securityContext: 
              runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
              runAsUser: {{ .Values.securityContext.runAsUser }}
              runAsGroup: {{ .Values.securityContext.runAsGroup }}
        {{- end }}
        {{- if .Values.gcp.enabled }}
            volumeMounts:
              - name: gcp
                mountPath: "/etc/gcp"
                readOnly: true
        {{- end }}
            ports:
            - name: http
              containerPort: {{ .Values.containers.port }}
              protocol: TCP
            livenessProbe:
              httpGet:
                path: /api/v1/health
                port: {{ .Values.containers.port }}
              initialDelaySeconds: 30
              periodSeconds: 10
              timeoutSeconds: 5
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              httpGet:
                path: /api/v1/health
                port: {{ .Values.containers.port }}
              initialDelaySeconds: 30
              periodSeconds: 10
              timeoutSeconds: 5
              successThreshold: 3
              failureThreshold: 3
            resources:
        {{ toYaml .Values.resources | nindent 14 }}
            env:
        {{- range $key, $value := .Values.environmentVariables }}
            - name: {{ $key }}
              value: {{ $value | quote }}
        {{- end }}
        {{- if .Values.database.enabled }}
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "name" . }}-db-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "name" . }}-db-secrets
              key: DB_PASSWORD
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: {{ template "name" . }}-db-secrets
              key: DB_HOST
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: {{ template "name" . }}-db-secrets
              key: DB_NAME
        {{- end }}
        {{- if .Values.gcp.enabled }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/gcp/gcp_credentials.json
        {{- end -}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.podAntiAffinity.enabled }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: release
                        operator: In
                        values:
                          - {{ template "name" . }}
                  topologyKey: kubernetes.io/hostname
      {{- end }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}